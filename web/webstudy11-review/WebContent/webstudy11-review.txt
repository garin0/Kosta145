** review **

-html, javascript, css, Servlet, JSP
 : HTML -> 웹문서의 컨텐트(내용)
   Javascript -> 웹문서의 동작(행위)
   CSS -> 웹문서의 레이아웃(디자인스타일)
   Servlet -> Java Web Application을 위한 기술
   			  Java code 내에서 html을 기술하여 출력
   			  Model2 설계방식에서 컨트롤러 역할을 담당
   			  
   JSP -> Java Server Page, 즉 동적인 웹페이지를 구현하기 위한 기술
   		  웹 컨테이너에 의해 Servlet으로 변환되어 실행(JSP는 Servlet 이다)
   		  Model2 설계방식에서는 View 역할을 담당
   		  
   Http: HyperText transfer Protocol
   
   WAS : Web Application Server
   		 Web Server + Web Container
   		 (html service)   (Servlet,JSP실행환경)
   Web Container : Servlet, JSP실행환경
   				   Servlet 라이프 사이클 관리
   				   ( init(ServletConfig) -> service(request,response), destory() )
   				   JSP를 Java(Servlet class)로 변환하고 컴파일
   				   
   DD (Deployment Descriptor 배포 기술서)
   -> 웹 어플리케이션이 최초 실행시 읽어서 로드하는 정보
   -> web.xml : welcome file 대문화면
   				Servlet설정, ServletConfig 초기파라미터 설정
   				ServletContext 초기파라미터 설정
   				ServletContextListener 설정
   				
   html form get과 post 요청 방식
   get: 조회, url 노출, 보안성 떨어짐, 대용량 전송 불가능
   		tomcat\server.xml에서 get 방식 한글처리 설정
   		
   post: 정보전송용, url 노출x, 보안성 우수, 대용량 가능
   		 별도의 한글 처리가 필요
   				
   Servlet Lifecycle
   
   class loading -> 객체 생성(생성자 호출) -> init(ServletConfig)
   위 과정은 최초 1번 실행
   service(request,response) --> doGet(request,response)
   									or
   								 doPost(request,response)
   클라이언트 요청시마다 매번 실행된다.
   클라이언트 로그인서비스		LoginServlet
   100명		----------->	객체 1
   								init 1
   								ServletConfig 1
   								service() 100
   								
   								ServletContext 1
   
   ServletConfig: 서블릿 객체 당 하나
   블로그		   init 호출 시점에 컨테이너가 주입한다.
   				  개별 서블릿이 웹서비스에 필요한 설정 정보 객체
   				  
   ServletContext: 웹어플리케이션 당 하나
   카페			   웹어플리케이션 최초 실행 시 생성된다.
   				   웹어플리케이션 차원의 정보를 저장하고 
   				   모든 서블릿과 JSP가 공유해 사용할 수 있는 객체
   				   
   				   
   POJO
   				   
   JSP LifeCycle: 
   참고) web container가 변환시켜 저장하는 공간
   		 tomcat\work 아래에 있다.
   .jsp --> .java --> .class --> 객체 생성 --> init(ServletConfig)
   위 과정은 최초 요청시(실행시) 한번 실행
   service(request,response)
   매번 요청시마다 실행된다.
   
   해제 직전 destroy()
   
**jsp 기본 문법**
1. <%@ %> 지시자(컨테이너에게 현 jsp 정보를 제공) 
		  import or encoding or errorPage or session 등 				
2. <%  %> 스트립틀릿, service 메서드 내에 자바 기술
3. <%= %> 출력
4. <%-- --%> 주석
5. <%! %> 멤버변수 또는 메서드 선언
   				
   				
   				
   				
   				
   				
   				